Y
tinytex::install_tinytex()
if(!require(scales)) install.packages("scales") else library(scales)
if(!require(boot)) install.packages("boot") else library(boot)
if(!require(janitor)) install.packages("janitor") else library(janitor)
if(!require(ggplot2)) install.packages("ggplot2") else library(ggplot2)
if(!require(ggalt)) install.packages("ggalt") else library(ggalt)
if(!require(dplyr)) install.packages("dplyr") else library(dplyr)
if(!require(tidyverse)) install.packages("tidyverse") else library(tidyverse)
if(!require(xlsx)) install.packages("xlsx") else library(xlsx)
if(!require(openxlsx)) install.packages("openxlsx") else library(openxlsx)
if(!require(corrplot)) install.packages("corrplot") else library(corrplot)
if(!require(mvShapiroTest)) install.packages("mvShapiroTest") else library(mvShapiroTest)
if(!require(MVar.pt)) install.packages(MVar.pt) else library(MVar.pt)
if(!require(packHV)) install.packages("packHV") else library(packHV)
if(!require(readxl)) install.packages("reaxl") else library(readxl)
if(!require(MASS)) install.packages("MASS") else library(MASS)
if(!require(exploreR)) install.packages("exploreR") else library(exploreR)
if(!require(openxlsx)) install.packages(openxlsx) else require(openxlsx)
if(!require(lmtest)) install.packages(lmtest) else require(lmtest)
if(!require(forecast)) install.packages(forecast) else require(forecast)
if(!require(RColorBrewer)) install.packages("RColorBrewer") else library(RColorBrewer)
if(!require(lpSolve)) install.packages("lpSolve") else library (lpSolve)
if(!require(lmtest)) install.packages("lmtest") else library(lmtest)
install.packages("lpSolve")
if(!require(scales)) install.packages("scales") else library(scales)
if(!require(boot)) install.packages("boot") else library(boot)
if(!require(janitor)) install.packages("janitor") else library(janitor)
if(!require(ggplot2)) install.packages("ggplot2") else library(ggplot2)
if(!require(ggalt)) install.packages("ggalt") else library(ggalt)
if(!require(dplyr)) install.packages("dplyr") else library(dplyr)
if(!require(tidyverse)) install.packages("tidyverse") else library(tidyverse)
if(!require(xlsx)) install.packages("xlsx") else library(xlsx)
if(!require(openxlsx)) install.packages("openxlsx") else library(openxlsx)
if(!require(corrplot)) install.packages("corrplot") else library(corrplot)
if(!require(mvShapiroTest)) install.packages("mvShapiroTest") else library(mvShapiroTest)
if(!require(MVar.pt)) install.packages(MVar.pt) else library(MVar.pt)
if(!require(packHV)) install.packages("packHV") else library(packHV)
if(!require(readxl)) install.packages("reaxl") else library(readxl)
if(!require(MASS)) install.packages("MASS") else library(MASS)
if(!require(exploreR)) install.packages("exploreR") else library(exploreR)
if(!require(openxlsx)) install.packages(openxlsx) else require(openxlsx)
if(!require(lmtest)) install.packages(lmtest) else require(lmtest)
if(!require(forecast)) install.packages(forecast) else require(forecast)
if(!require(RColorBrewer)) install.packages("RColorBrewer") else library(RColorBrewer)
if(!require(lpSolve)) install.packages("lpSolve") else library (lpSolve)
if(!require(lmtest)) install.packages("lmtest") else library(lmtest)
label_reais <- function(x) {
paste0("R$ ", comma(x, big.mark = ".", decimal.mark = ","))
}
label_dots <- function(x) {
paste0(comma(x, big.mark = ".", decimal.mark = ","))
}
dados =  read_excel("~/Library/CloudStorage/OneDrive-Pessoal/Documentos/7. Especialização/3. TCC/3. Códigos/tcc/BaseCompilada_TS14_2022.xlsx",
sheet = "DadosEscores"
dados =  read_excel("~/Library/CloudStorage/OneDrive-Pessoal/Documentos/7. Especialização/3. TCC/3. Códigos/tcc/BaseCompilada_TS14_2022.xlsx",
setwd("~/OneDrive/Documentos/7. Especialização/3. TCC")
setwd("~/OneDrive/Documentos/7. Especialização/3. TCC")
### MacOS
dados =  read_excel("~/Library/CloudStorage/OneDrive-Pessoal/Documentos/7. Especialização/3. TCC/3. Códigos/tcc/BaseCompilada_TS14_2022.xlsx",
sheet = "DadosEscores")
dados$IdAgente = as.character(dados$IdAgente)
db = with(dados,dplyr::select(dados, Concessionaria, Tipo,
Ano, PMSO, rede.menor.230,
rede.maior.230,MVA,Mvar,
modulos.sub.menor230,modulos.sub.maior230,
modulos.manobra.menor230,modulos.manobra.maior230))
modelo_mass = masslm(db[,4:12], "PMSO")
modelo_mass =  as.data.frame(modelo_mass)
modelo_mass = modelo_mass[order(modelo_mass$R.squared,decreasing = TRUE),]
print(modelo_mass)
colnames(db)[colnames(db) == modelo_mass$IV[1]] = "X1"
colnames(db)[colnames(db) == modelo_mass$IV[2]] = "X2"
colnames(db)[colnames(db) == modelo_mass$IV[3]] = "X3"
colnames(db)[colnames(db) == modelo_mass$IV[4]] = "X4"
colnames(db)[colnames(db) == modelo_mass$IV[5]] = "X5"
colnames(db)[colnames(db) == modelo_mass$IV[6]] = "X6"
colnames(db)[colnames(db) == modelo_mass$IV[7]] = "X7"
colnames(db)[colnames(db) == modelo_mass$IV[8]] = "X8"
summary(db)
ggplot(db, aes(x = PMSO)) +
geom_histogram(bins = 10, fill = "blue", color = "white") +
scale_x_continuous(labels = label_reais, name = "PMSO") +
scale_y_continuous(name = "Freq.")+
labs(title = "Histograma  - PMSO")+
theme_classic()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8))
ggplot(db, aes(X1, PMSO)) +
geom_point(pch = 19, color = "darkblue") +
ggtitle(expression(paste(bold("PMSO vs "), bold(X[1]))))+
xlab(expression(paste(bold(X[1]))))+
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
scale_y_continuous(labels = label_reais, limits = c(0, 2000000)) +
facet_wrap(~Ano, nrow = 3, scales = "free_x") +
theme_linedraw()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
panel.spacing = unit(0.2, "lines"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(color = "grey", linetype = "dotted"),
panel.grid.minor = element_line(color = "grey", linetype = "dotted"))
sp1 <- ggplot(db, aes(X1, PMSO)) +
geom_point(pch = 19, color = "darkblue") +
ggtitle(expression(paste(bold("PMSO vs "), bold(X[1]))))+
xlab(expression(paste(bold(X[1]))))+
scale_x_continuous(labels = scales::number_format(big.mark = ".", decimal.mark = ",")) +
scale_y_continuous(labels = label_reais, limits = c(0, 2000000)) +
theme_linedraw()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
panel.spacing = unit(0.2, "lines"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(color = "grey", linetype = "dotted"),
panel.grid.minor = element_line(color = "grey", linetype = "dotted"))
sp1
### Correlation plots
dbcor = with(db,dplyr::select(db, PMSO,X1,X2,X3,X4,X5,X6,X7,X8))
matCor <- cor(dbcor, method="spearman")
corrplot(matCor, type="upper",
order="AOE", diag=FALSE, addgrid.col="grey",
outline=TRUE,
tl.col = "red",
# tl.srt = 90,
addCoef.col = "white",
#tl.pos = "lt",
mar=c(0.5,0.5,0.5,0.5),
number.cex = 0.7,
)
# Ano
bp1 <- ggplot(db, aes(x = Ano, y = PMSO)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 2000000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
library(gridExtra)
# Ano
bp1 <- ggplot(db, aes(x = Ano, y = PMSO)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 2000000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
bp1
ggplot(db, aes(x = Ano, y = X1)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 2000000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
ggplot(db, aes(x = Ano, y = X1)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 21000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
ggplot(db, aes(x = Ano, y = X1)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 2100)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
ggplot(db, aes(x = Ano, y = X3)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 2100)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
ggplot(db, aes(x = Ano, y = X3)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 100000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
ggplot(db, aes(x = Ano, y = X4)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 100000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
ggplot(db, aes(x = Ano, y = X5)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 100000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
ggplot(db, aes(x = Ano, y = X5)) +
geom_boxplot(fill = "steelblue",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 50000)) +
labs(title = "PMSO anual", x = "Ano", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
# Concessionarias
ggplot(db, aes(x = Concessionaria, y = PMSO)) +
geom_boxplot(fill = "forestgreen",color = "black",outlier.shape = "x", outlier.size = 3,
outlier.stroke = 0.2) +
scale_y_continuous(labels = label_reais, limits = c(0, 2000000)) +
labs(title = "PMSO por concessionária", x = "Concessionárias", y = "PMSO") +
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
modelo = lm(PMSO ~ ., data=dbcor)
summary(modelo)
modelo$coefficients
yfit1 = predict(modelo,newdata = dbcor)
y1  <- dbcor$PMSO
SQT   <- sum( (y1 - mean(y1))^2 )
SQres <- sum( (y1 - yfit1)^2 )
R12 = (1 - SQres/SQT)
R12
p = yfit1 > 0
y1_log  <- log(dbcor$PMSO[p])
yfit1 = yfit1[p]
SQT_log   <- sum( (y1_log - mean(y1_log))^2 )
SQres_log <- sum( (y1_log - log(yfit1)^2 ))
R2_log = (1 - SQres_log/SQT_log)
R2_log
linear1 <- ggplot(data = db, aes(x = PMSO, y = yfit1)) +
geom_point(color = "blue", size = 2, shape = 19) +
scale_y_continuous(labels = label_dots, limits = c(-500000, 1500000))+
scale_x_continuous(labels = label_dots, limits = c(-500000, 1500000))+
geom_abline(intercept = 0, slope = 1, color = "maroon", size = 1,linetype = "dotted") +
#geom_hline(yintercept = 0, linetype = "solid", color = "red",size = 1)+
#annotate("text", x = -500000, y = 50000, label = "Restrição operacional", color = "red",
#         size = 2.5, hjust = 0,fontface="bold")+
xlab("Observado") + ylab("Estimado") +
ggtitle("PMSO: estimado x observado",
subtitle = "Modelo de regressão multivariada")+
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
panel.spacing = unit(0.2, "lines"),
axis.text.x = element_text(margin = margin(0, 0, 0.5, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.3,"cm")),
panel.grid.major = element_line(color = "grey", linetype = "dotted"),
panel.grid.minor = element_line(color = "grey", linetype = "dotted"))
linear1 <- ggplot(data = db, aes(x = PMSO, y = yfit1)) +
geom_point(color = "blue", size = 2, shape = 19) +
scale_y_continuous(labels = label_dots, limits = c(-500000, 1500000))+
scale_x_continuous(labels = label_dots, limits = c(-500000, 1500000))+
geom_abline(intercept = 0, slope = 1, color = "maroon", size = 1,linetype = "dotted") +
#geom_hline(yintercept = 0, linetype = "solid", color = "red",size = 1)+
#annotate("text", x = -500000, y = 50000, label = "Restrição operacional", color = "red",
#         size = 2.5, hjust = 0,fontface="bold")+
xlab("Observado") + ylab("Estimado") +
ggtitle("PMSO: estimado x observado",
subtitle = "Modelo de regressão multivariada")+
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
panel.spacing = unit(0.2, "lines"),
axis.text.x = element_text(margin = margin(0, 0, 0.5, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.3,"cm")),
panel.grid.major = element_line(color = "grey", linetype = "dotted"),
panel.grid.minor = element_line(color = "grey", linetype = "dotted"))
linear1
yfit1 = predict(modelo,newdata = dbcor)
y1  <- dbcor$PMSO
SQT   <- sum( (y1 - mean(y1))^2 )
SQres <- sum( (y1 - yfit1)^2 )
R12 = (1 - SQres/SQT)
R12
linear1 <- ggplot(data = db, aes(x = PMSO, y = yfit1)) +
geom_point(color = "blue", size = 2, shape = 19) +
scale_y_continuous(labels = label_dots, limits = c(-500000, 1500000))+
scale_x_continuous(labels = label_dots, limits = c(-500000, 1500000))+
geom_abline(intercept = 0, slope = 1, color = "maroon", size = 1,linetype = "dotted") +
#geom_hline(yintercept = 0, linetype = "solid", color = "red",size = 1)+
#annotate("text", x = -500000, y = 50000, label = "Restrição operacional", color = "red",
#         size = 2.5, hjust = 0,fontface="bold")+
xlab("Observado") + ylab("Estimado") +
ggtitle("PMSO: estimado x observado",
subtitle = "Modelo de regressão multivariada")+
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
panel.spacing = unit(0.2, "lines"),
axis.text.x = element_text(margin = margin(0, 0, 0.5, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.3,"cm")),
panel.grid.major = element_line(color = "grey", linetype = "dotted"),
panel.grid.minor = element_line(color = "grey", linetype = "dotted"))
linear1
ggplot(data = db, aes(x = PMSO, y = yfit1)) +
geom_point(shape = 19, size = 2, color = "blue") +
scale_x_log10(labels = label_dots) +
scale_y_log10(labels = label_dots) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red", size = 0.7) +
labs(x = "Observado", y = "Estimatedo") +
ggtitle("PMSO: estimado x observado",
subtitle = "Modelo de regressão - escala Log")+
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.text.x = element_text(margin = margin(0, 0, 0.3, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.5,"cm")),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
panel.grid.major = element_line(size = 0.2, linetype = "dotted", color = "gray60"),
panel.grid.minor = element_line(size = 0.2, linetype = "dotted", color = "gray60")
)
### Shapiro-Wilk test | Null-hypothesis: population is normally distributed
### If p-value < alpha then null hypothesis is rejected. standard alpha : 0.05
shapiro.test(residuals(modelo))
# Anderson-Darling
nortest::ad.test(modelo$residuals)
# Kolmogorov-Smirnov
nortest::lillie.test(modelo$residuals)
# Breusch-Pagan - homoscedasticidade
lmtest::bptest(modelo)
# Durbin - Watson - independência
lmtest::dwtest(modelo)
yfit1 = NULL
yfit1 <- rep(NA,nrow(db))
for(emp in unique(db$Concessionaria)){
pos   <- which(db$Concessionaria == emp)
train1 <- db[-pos,]
test1  <- db[pos,]
modelo1 <- lm(PMSO ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8,data=train1)
modelo_1<- stepAIC(modelo1, trace = FALSE)
yfit1[pos] <- predict(modelo1, newdata=test1, type="response")
#print(yfit)
}
yfit1_linear = yfit1
y1  <- dbcor$PMSO
SQT   <- sum( (y1 - mean(y1))^2 )
SQres <- sum( (y1 - yfit1_linear)^2 )
R12 = (1 - SQres/SQT)
R12
p = yfit1_linear > 0
y1_log  <- log(dbcor$PMSO[p])
yfit1_linear_log = yfit1_linear[p]
SQT_log   <- sum( (y1_log - mean(y1_log))^2)
SQres_log <- sum( (y1_log - log(yfit1_linear_log )^2 ))
R2_log = (1 - SQres_log/SQT_log)
R2_log
ggplot(data = db, aes(x = PMSO, y = yfit1_linear)) +
geom_point(color = "blue", size = 2, shape = 19) +
scale_y_continuous(labels = label_dots, limits = c(-500000, 1500000))+
scale_x_continuous(labels = label_dots, limits = c(-500000, 1500000))+
geom_abline(intercept = 0, slope = 1, color = "maroon", size = 1,linetype = "dotted") +
#geom_hline(yintercept = 0, linetype = "solid", color = "red",size = 1)+
#annotate("text", x = -500000, y = 50000, label = "Restrição operacional", color = "red",
#         size = 2.5, hjust = 0,fontface="bold")+
xlab("Observado") + ylab("Estimado") +
ggtitle("PMSO: estimado x observado",
subtitle = "Modelo de regressão multivariada leave-one-out")+
theme_bw()+
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.text = element_text(face = "bold", size = 8),
axis.title = element_text(face = "bold"),
panel.spacing = unit(0.2, "lines"),
axis.text.x = element_text(margin = margin(0, 0, 0.5, 0,"cm")),
axis.text.y = element_text(margin = margin(0, 0, 0, 0.3,"cm")),
panel.grid.major = element_line(color = "grey", linetype = "dotted"),
panel.grid.minor = element_line(color = "grey", linetype = "dotted"))
setwd("~/OneDrive/Documentos/7. Especialização/3. TCC")
